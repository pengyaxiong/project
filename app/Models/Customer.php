<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Notifications\Notifiable;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Support\Facades\Hash;
class Customer extends Authenticatable
{
    use Notifiable;
    //黑名单为空
//    protected $guarded = [];
    protected $table = 'wechat_customer';

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email','status', 'password','openid', 'nickname', 'sex', 'language', 'city', 'province', 'country', 'headimgurl','tel','sort_order','remark'
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    public function projects()
    {
        return $this->belongsToMany(Project::class, 'wechat_project_customer', 'project_id', 'customer_id')->withPivot(
            'project_id',
            'customer_id'
        );
    }

    public function patrons()
    {
        return $this->hasMany(Patron::class);
    }


    public function tasks()
    {
        return $this->hasMany(Task::class);
    }

    public function parent()
    {
        return $this->belongsTo(get_class($this));
    }


    public function children()
    {
        return $this->hasMany(get_class($this), 'parent_id');
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::saving(function ($model){
            if (empty($model->password)){
                $model->password=Hash::make(123456);
            }
        });
        //删除前回调
        static::deleting(function ($model) {
            $id = $model->id;
            $children=self::where('parent_id', $id)->exists();
            if ($children) {
                throw new \Exception('该用户下有组员，请先删除组员！！');
            }
        });

        //删除后回调
        static::deleted(function ($model) {
            $id = $model->id;

        //    self::where('parent_id', $id)->delete();
        });
    }
}
